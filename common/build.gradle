plugins {
	id 'java-library' // include java plugin
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'maven-publish'
}

group = 'com.songspasssta'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
	set('querydslVersion', "5.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	api 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'jakarta.persistence:jakarta.persistence-api'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//Querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			groupId = 'com.songspasssta'
			artifactId = 'common'
			version = '0.0.1-SNAPSHOT'
		}
	}
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/Song-s-PaaSTA/plog-maven-repo")
			credentials {
				username = project.findProperty("MAVEN_USER") ?: ""
				password = project.findProperty("MAVEN_PASSWORD") ?: ""
			}
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	delete file('src/main/generated')
}
